		select		5
			...
		from			1
			...		
		where			2
			...	
		group by		3
			...
		having		4
			...
		order by		6
			...
		limit			7
			...;

1.mysql命令:
	数据库:
	- 登录数据库:mysql -uroot -p960911;
	- 创建数据库:create database xiaonian;
	- 查看数据库:show databases;
	- 使用数据库:use xiaonian;
	- 删除数据库:drop database xiaonian;
	- 查看使用的是哪一个数据库: select database();
	- 查看数据库版本号:select version();
	- 结束一条语句: \c
	- 退出数据库: exit
	表:
	- 查看表结构:desc emp;
	- 查看建表语句:show create table emp;
	- 删除表:drop table student;
	- 表的复制:create table 表名 as select语句;
	- 将查询结果插入到一张表中:insert into dept1 select * from dept

2.sql语句:
	基础查询
	1.查询员工年薪: 
		select ename,sal*12 from emp;
		查询结果字段可以进行数学运算

	2.给查询字段改名: 
		select ename,sal*12 as yearsal from emp;
		as关键字可以省略

	3.别名有中文: 
		select ename,sal*12 as '年薪' from emp;
		标准sql语句中要求字符串使用''括起来

	4.*效率较低,在实际开发中一般不使用

	
	条件查询
	5.查询工资等于5000的员工姓名？
		select ename,sal from emp where sal = 5000;
	
	6.查询SMITH的工资？
		select ename,sal from emp where ename = 'SMITH';
		字符串使用''括起来

	7.找出工资高于3000的员工？
		select ename,sal from emp where sal > 3000;

	8.找出工资不等于3000的员工?

	9.找出工资在1100和3000之间的员工，包括1100和3000？
		select ename,sal from emp where sal >= 1100 and sal <= 3000;
		select ename,sal from emp where sal between 1100 and 3000;
		between..and.. 是闭区间,必须左小右大
		and 关键字:表示并且

	10.找出哪些人津贴为NULL？
		错误: select ename,comm from emp where comm = null;
		正确:select ename,comm from emp where comm is null;
		在数据库当中NULL不是一个值，代表什么也没有，为空。
		空不是一个值，不能用等号衡量。
		必须使用 is null或者is not null

	11.找出哪些人津贴不为NULL？
		select ename,comm from emp where comm is not null;

	12.找出哪些人没有津贴,包括null和0;
		select ename,comm from emp where comm is null or comm = 0;
		or 关键字:表示或者
		
	13.找出工作岗位是MANAGER和SALESMAN的员工？
		select ename,job from emp where job = 'MANAGER' or job = 'SALESMAN';

	14.and和or联合起来用：找出薪资大于1000的并且部门编号是20或30部门的员工?
		select ename,sal,deptno from emp where sal > 1000 and (deptno = 20 or deptno = 30)
		当优先级不确定时,加小括号

	15.找出工作岗位是MANAGER和SALESMAN的员工？
		select ename,job from emp where job in('MANAGER','SALESMAN');
		in(,):等同于or,在这几个值当中
		ont in(,):不在这几个值当中

	like模糊查询
	16.%代表任意多个字符，_代表任意1个字符。

	17.找出名字当中含有O的？
		select ename from emp where ename like '%o%';

	18.找出名字中第二个字母是A的？
		select ename from emp where ename like '_a%';

	19.找出名字中有下划线的？
		select ename from emp where ename like '%\_%'
		使用转义字符"\"

	排序
	20.按照工资升序，找出员工名和薪资？
		select ename,sal from emp order by sal;

	21.默认是升序。怎么指定升序或者降序呢？asc表示升序，desc表示降序。

	22.按照工资的降序排列，当工资相同的时候再按照名字的升序排列。
		 select ename,sal from emp order by sal desc ,ename asc;
		 越靠前的字段越能起到主导作用。只有当前面的字段无法完成排序的时候，才会启用后面的字段。

	23.找出工作岗位是SALESMAN的员工，并且要求按照薪资的降序排列?
		 select ename,job,sal from emp where job = 'SALESMAN' order by sal desc;


	24.代码执行顺序:
			select 
				字段						3
			from
				表名						1
			where
				条件						2
			order by
				....						4
			
			order by是最后执行的。

	分组函数
	25.
		计数: count()
		求和: sum()
		平均值: avg()
		最大值: max()
		最小值: min()
		
		记住：所有的分组函数都是对“某一组(一个字段)”数据进行操作的。
	
	26.找出工资总和,最高,最低,平均值,总人数
		select sum(sal) from emp;
		select max(sal) from emp;
		select min(sal) from emp;
		select avg(sal) from emp;
		select count(sal) from emp;

	27.分组函数还有另一个名字：多行处理函数。
	多行处理函数的特点：输入多行，最终输出的结果是1行。
	分组函数自动忽略NULL。

	28.找出工资高于平均工资的员工？
		select ename,sal from emp where sal > (select avg(sal) from emp);

	29.计算每个员工的年薪？
		错误:select ename,(sal+comm)*12 as yearsal from emp;
		重点：所有数据库都是这样规定的，只要有NULL参与的运算结果一定是NULL。

		正确:select ename,(sal+ifnull(comm,0))*12 '年薪' from emp;

	group by 和 having
	30.group by ： 按照某个字段或者某些字段进行分组。
	   having : having是对分组之后的数据进行再次过滤。

	31.找出每个工作岗位的最高薪资。
		select job,max(sal) from emp group by job;

	32.注意：分组函数一般都会和group by联合使用，这也是为什么它被称为分组函数的原因。
	   并且任何一个分组函数（count sum avg max min）都是在group by语句执行结束之后才会执行的。
	   当一条sql语句没有group by的话，整张表的数据会自成一组。

	33.记住一个规则：当一条语句中有group by的话，select后面只能跟分组函数和参与分组的字段。

	34.每个工作岗位的平均薪资？
		select job,avg(sal) from emp group by job;
		
	35.多个字段能不能联合起来一块分组？ 找出每个部门不同工作岗位的最高薪资。
		select deptno,job,max(sal) from emp group by deptno,job;

	36.找出每个部门的最高薪资，要求显示薪资大于2900的数据。
		select job,max(sal) from emp where sal > 2900 group by job;
		select job,max(sal) from emp group by job having max(sal) > 2900 ;
		分组函数效率较低,能不使用则不使用
			
	37.找出每个部门的平均薪资，要求显示薪资大于2000的数据。
		select deptno,avg(sal) from emp group by deptno having avg(sal) > 2000;

	38.where后面不能使用分组函数.

	39.总结一个完整的DQL语句怎么写？

		select		5
			..
		from			1	
			..
		where			2
			..
		group by		3
			..
		having		4
			..
		order by		6
			..

	查询结果去重:distinct
	40.distinct只能出现在所有字段的最前面。

	41.统计岗位的数量？
		select count(distinct job) from emp ; 

	连接查询
	42.笛卡尔积现象：当两张表进行连接查询的时候，没有任何条件进行限制，
	                 最终的查询结果条数是两张表记录条数的乘积。

	43.找出每一个员工的部门名称，要求显示员工名和部门名。
		select e.ename '姓名',d.dname '部门'
		from emp e
		join dept d
		on e.deptno = d.deptno ;
		内连接:inner join ,inner 可以省略

	44.内连接之非等值连接：最大的特点是：连接条件中的关系是非等量关系。

	45.找出每个员工的工资等级，要求显示员工名、工资、工资等级。
		select e.ename,e.sal,s.grade
		from emp e
		join salgrade s
		on e.sal > s.losal and e.sal <s.hisal;

	46.自连接：最大的特点是：一张表看做两张表。自己连接自己。
		找出每个员工的上级领导，要求显示员工名和对应的领导名。
		select a.ename,b.ename '领导' 
		from emp a
		join emp b
		on b.empno = a.mgr;
	
	47.什么是外连接，和内连接有什么区别？

	内连接：
		假设A和B表进行连接，使用内连接的话，凡是A表和B表能够匹配上的记录查询出来，这就是内连接。
		AB两张表没有主副之分，两张表是平等的。

	外连接：
		假设A和B表进行连接，使用外连接的话，AB两张表中有一张表是主表，一张表是副表，主要查询主表中
		的数据，捎带着查询副表，当副表中的数据没有和主表中的数据匹配上，副表自动模拟出NULL与之匹配。
	
	外连接的分类？
		左外连接（左连接）：表示左边的这张表是主表。
		右外连接（右连接）：表示右边的这张表是主表。

		左连接有右连接的写法，右连接也会有对应的左连接的写法。

	48.找出每个员工的上级领导？（所有员工必须全部查询出来。）
		select a.ename,b.ename
		from emp a
		left join emp b
		on b.empno = a.mgr;
	
	49.outer可以省略      outer left join 左外连接        outer right join 右外连接

	50.外连接最重要的特点是：主表的数据无条件的全部查询出来,查出来没有的用null表示

	51.找出哪个部门没有员工？
		select d.dname 
		from dept d
		left join emp e
		on d.deptno = e.deptno
		where e.ename is null;

	53.三张表怎么连接查询？
		....
		from	A

		join	B

		on	...

		join	C

		on	...
	
	表示：A表和B表先进行表连接，连接之后A表继续和C表进行连接。
	   
	54.找出每一个员工的部门名称以及工资等级。
		select e.ename,d.dname,s.grade
		from emp e
		join dept d
		on e.deptno = d.deptno
		join salgrade s
		on e.sal between s.losal and s.hisal;

	55.找出每一个员工的部门名称、工资等级、以及上级领导。
		select a.ename,b.ename,d.dname,s.grade
		from emp a
		join emp b
		on a.mgr = b.empno
		join dept d
		on a.deptno = d.deptno
		join salgrade s
		on a.sal between s.losal and s.hisal;

	子查询
	56.什么是子查询？子查询都可以出现在哪里？
	   select语句当中嵌套select语句，被嵌套的select语句是子查询。
	   子查询可以出现在哪里？
		select
			..(select).
		from
			..(select).
		where
			..(select).

	57.where子句中使用子查询
	   将查询结果当做条件使用
	   找出高于平均工资的员工?
	   select ename,sal from emp where sal > (select avg(sal) from emp);

	58.from字句中使用子查询
	   将查询到的结果当做一张新表使用
	   找出每个部门平均薪水的等级?
	   1.找到每个部门的平均薪水
	   select job,avg(sal) from emp group by job;
	   2.找到平均薪水的等级

	   select t.*,s.grade
	   from (select job,avg(sal) avgsal from emp group by job) t
	   left join salgrade s
	   on t.avgsal between s.losal and s.hisal;

	59.select字句中使用子查询
	   将查询到的两张表在一块显示,相当于两张表左右拼接在一起
	   找出每个员工所在的部门名称，要求显示员工名和部门名。

	   

	60.union
	   将两张不相干的表拼接,相当于两张表上下拼接在一起

	limit是mysql特有的，其他数据库中没有，不通用。

	61.语法机制：
		limit startIndex, length
		startIndex表示起始位置，从0开始，0表示第一条数据。
		length表示取几个

	62.limit是sql语句最后执行的一个环节：
		select		5
			...
		from			1
			...		
		where			2
			...	
		group by		3
			...
		having		4
			...
		order by		6
			...
		limit			7
			...;

	63.取出工资前5名的员工（思路：降序取前5个）
		select * from emp order by sal desc limit 0,5;

	64.找出工资排名在第4到第9名的员工？
		select * from emp order by sal desc limit 3,6;

	65.通用的标准分页sql？

		每页显示3条记录：
		第1页：0, 3
		第2页：3, 3
		第3页：6, 3
		第4页：9, 3
		第5页：12, 3

		每页显示pageSize条记录：
		第pageNo页：(pageNo - 1) * pageSize, pageSize

		pageSize是什么？是每页显示多少条记录
		pageNo是什么？显示第几页

		java代码{
			int pageNo = 2; // 页码是2
			int pageSize = 10; // 每页显示10条
			
			limit (pageNo - 1) * pageSize, pageSize
		}

	66.建表语句的语法格式：
		create table 表名(
			字段名1 数据类型,
			字段名2 数据类型,
			字段名3 数据类型,
			....
		);

	67.常用数据类型:
		int		整数型(java中的int)
		bigint	长整型(java中的long)
		float		浮点型(java中的float double)
		char		定长字符串(String)
		varchar	可变长字符串(StringBuffer/StringBuilder)
		date		日期类型 （对应Java中的java.sql.Date类型）
		BLOB		二进制大对象（存储图片、视频等流媒体信息） Binary Large OBject （对应java中的Object）
		CLOB		字符大对象（存储较大文本，比如，可以存储4G的字符串。） Character Large OBject（对应java中的Object）
		......

	68.创建一张学生表:
		create table studentno (
			no bigint,
			name varchar(255),
			age int,
			sex int(1),
			addr varchar(255)
		)
		注意:最后一个字段不加","

	69.插入一条数据:
		insert into 表名(字段名1,字段名2,字段名3,....) values(值1,值2,值3,....)

	70.删除一条数据:
		delete from 表名 where 条件;
		注意：没有条件全部删除。
	71.修改一条数据:
		update 表名 set 字段名1=值1,字段名2=值2... where 条件;
		注意：没有条件整张表数据全部更新。
		
	72.怎么删除大表中的数据？（重点）
		truncate table 表名; // 表被截断，不可回滚。永久丢失。
		删除表？
		drop table 表名; // 这个通用。

	73.约束:
		非空约束(not null)：约束的字段不能为NULL  只有列级约束
		唯一约束(unique)：约束的字段不能重复.但可以为null	既有列级约束,也有表级约束
		主键约束(primary key)：约束的字段既不能为NULL，也不能重复（简称PK	既有列级约束,也有表级约束
		外键约束(foreign key)：...（简称FK）

	74.一张表的主键约束只能有1个。（必须记住）

	75.mysql提供主键值自增：（非常重要。）auto_increment

	76.外键可以为NULL

	77.被引用的字段不一定是主键，但至少具有unique约束。

	78.创建一张学生表,添加主键和外键
		create table t_student1(
			sno int,
			sname varchar(255),
			classno int,
			primary key(sno) auto_increment,
			foreign key(classno) references t_class(cno)
		);

	79.事务:
		事务的特性？
		事务包括四大特性：ACID
		A: 原子性：事务是最小的工作单元，不可再分。
		C: 一致性：事务必须保证多条DML语句同时成功或者同时失败。
		I：隔离性：事务A与事务B之间具有隔离。
		D：持久性：持久性说的是最终数据必须持久化到硬盘文件中，事务才算成功的结束。

	80.事务隔离性存在隔离级别，理论上隔离级别包括4个：
			第一级别：读未提交（read uncommitted）
				对方事务还没有提交，我们当前事务可以读取到对方未提交的数据。
				读未提交存在脏读（Dirty Read）现象：表示读到了脏的数据。
			第二级别：读已提交（read committed）
				对方事务提交之后的数据我方可以读取到。
				这种隔离级别解决了: 脏读现象没有了。
				读已提交存在的问题是：不可重复读。
			第三级别：可重复读（repeatable read）
				这种隔离级别解决了：不可重复读问题。
				这种隔离级别存在的问题是：读取到的数据是幻象。
			第四级别：序列化读/串行化读（serializable） 
				解决了所有问题。
				效率低。需要事务排队。
			
			oracle数据库默认的隔离级别是：读已提交。
			mysql数据库默认的隔离级别是：可重复读。


